@startuml Synchronous API
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
end box

participant Target as "Target System"

Source -> AGW
AGW -> Target
AGW <-- Target
Source <-- AGW

@enduml

############################################

@startuml Complex Synchronous API
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant Func as "Logic App / Function"
end box

participant Target1 as "Target System 1"
participant Target2 as "Target System 2"

Source -> AGW
AGW -> Func
Func -> Target1
Func <-- Target1
Func -> Target2
Func <-- Target2
Func -> Func: Create response message
AGW <-- Func
Source <-- AGW

@enduml

############################################

@startuml Asynchronous API
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant Function as "Logic App / Function"
participant Storage
end box

participant Target1 as "Target System 1"
participant Target2 as "Target System 2"

Source -> AGW
Source <-- AGW: HTTP 202 (RequestID)
AGW -> Function
Function -> Target1
Function <-- Target1
Function -> Target2
Function <-- Target2
Function -> Function: Create response message
Function -> Storage: Persist (RequestId)
Function <-- Storage
Source -> AGW: GET (RequestId)
AGW -> Storage: GET (RequestId)
AGW <- Storage
Source <-- AGW

@enduml

############################################

@startuml PubSub Direct
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant SB as "Service Bus"
end box

participant Target1 as "Target System 1"
participant Target2 as "Target System 2"

Target1 -> SB: Subscribe
Target2 -> SB: Subscribe
Source -> SB: Publish
Target1 -> SB: Consume*
Target1 <-- SB
Target2 -> SB: Consume*
Target2 <-- SB

@enduml

############################################

@startuml Publish via API
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant SB as "Service Bus"
end box

participant Target1 as "Target System 1"
participant Target2 as "Target System 2"

Target1 -> SB: Subscribe
Target2 -> SB: Subscribe
Source -> AGW: PublishMessage(payload)
AGW -> SB: Publish
Source <-- AGW: HTTP 202
Target1 -> SB: Consume*
Target1 <-- SB
Target2 -> SB: Consume*
Target2 <-- SB

@enduml

############################################

@startuml Subscribe via API
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant SB as "Service Bus"
participant Adapter as "Pub/Sub Adapter"
end box

participant Target1 as "Target System 1"
participant Target2 as "Target System 2"

Adapter -> SB: Subscribe
Source -> SB: Publish
Adapter -> SB: Consume*
Adapter <-- SB
Adapter -> Target1: Push
Adapter -> Target2: Push

@enduml

############################################

@startuml File Transfer
!include ./styling.puml

participant Source as "Source System"
participant Folder as "Folder"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant LA as "Logic App"
participant Storage as "Storage*"
end box

participant Target as "Target System"

Source -> Folder: Place file
Folder -> LA: Trigger
LA -> LA: Transform
LA -> Storage: Persist
LA -> AGW: Trigger(FileId)
AGW -/ Target: Trigger(FileId)
Target -> AGW: GET (FileId)
AGW -> Storage: GET (FileId)
AGW <-- Storage
Target <-- AGW

@enduml

############################################

@startuml File Transfer ONVZ Dataplatform
!include ./styling.puml

participant Source as "Source\nSystem"
participant Folder as "FTP\nFolder"

box "Integration platform" #LightGray
participant LA as "Logic App /\nMFT"
end box

box "Data platform" #LightSteelBlue
participant Landing as "Data HUB\nLanding"
participant Synapse as "Azure\nSynapse"
participant Staging as "Data HUB\nStaging"
end box

Source -> Folder: Place file
Folder -> LA: Trigger

alt Parquet formaat
    LA -> Staging: Persisteer
end

alt Geen Parquet formaat
    LA -> Landing: Persisteer
    Landing -> Synapse: Trigger
    opt Transformatie nodig
        Synapse -> Synapse: Transformeer
    end
    Synapse -> Synapse: Converteer naar Parquet
    Synapse -> Staging: Persisteer
end

@enduml

############################################

@startuml Process management / Workflow - Orchestration
!include ./styling.puml

participant System1 as "System 1"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant LA as "Logic App"
end box

participant System2 as "System 2"
participant System3 as "System 3"

System1 -> AGW: StartProcess(vars)
AGW -> LA: StartProcess(vars)
System1 <-- AGW: HTTP 202

LA -> LA: Process Logic
LA -> AGW
AGW -> System2
AGW <-- System2
LA <-- AGW

LA -> LA: Process Logic
LA -> AGW
AGW -> System3
AGW <-- System3
LA <-- AGW

LA -> LA: Process Logic
LA -> AGW
AGW -> System1
AGW <-- System1
LA <-- AGW

@enduml

############################################

@startuml Process management / Workflow - choreoraphy
!include ./styling.puml

participant System1 as "System 1"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant SB as "Service Bus"
end box

participant System2 as "System 2"
participant System3 as "System 3"

System1 -> AGW: StartProcess(vars)
AGW -> System2: StartProcess(vars)
System2 -> System2: ExecuteProcessStep
System2 -> SB: Publish(Step1Done)

System3 -> SB: Consume*
SB -> System3: Step1Done
System3 -> System3: ExecuteProcessStep
System3 -> SB: Publish(Step2Done)

System1 -> SB: Consume*
SB -> System1: Step2Done
System1 -> System1: ExecuteProcessStep
System1 -> SB: Publish(ProcessDone)

@enduml

############################################

@startuml Direct Database Access
!include ./styling.puml

participant Source as "Source System"

box "Integration platform" #LightGray
participant AGW as "API Gateway"
participant Adapter as "API Adapter"
end box

participant DB as "Database"

Source -> AGW
AGW -> Adapter
Adapter -> DB: Query
Adapter <-- DB: Result
AGW <-- Adapter
Source <-- AGW

@enduml